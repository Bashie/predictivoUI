{"ast":null,"code":"var _jsxFileName = \"I:\\\\Facu\\\\semiario2\\\\workspace\\\\predictivoUI\\\\src\\\\components\\\\Provider.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n/**\r\n * Provider component\r\n *\r\n * @param   {boolean}   closeOnEsc        if the menu should close on esc keydown\r\n * @param   {boolean}   isOpen            if the menu should be visible or not\r\n * @param   {string}    menuBackground    background color of the menu\r\n * @param   {string}    menuDuration      duration of the open/close animation for the menu\r\n * @param   {function}  onClose           callback function if menu closes\r\n * @param   {string}    overlayBackground background color of the menu\r\n * @param   {string}    overlayDuration   duration of the open/close animation for the overlay\r\n * @param   {string}    overlayOpacity    opacity of the overlay\r\n * @param   {string}    position          position of the menu (left or right)\r\n * @param   {string}    width             maximum width of the menu\r\n * @returns {component}                   React component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Provider = _ref => {\n  let {\n    children,\n    closeOnEsc = true,\n    isOpen = false,\n    menuBackground = '#fff',\n    menuDuration = '500ms',\n    onClose,\n    overlayBackground = '#000',\n    overlayDuration = '500ms',\n    overlayOpacity = 0.2,\n    position = 'left',\n    width = '300px'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      closeOnEsc,\n      isOpen,\n      menuBackground,\n      menuDuration,\n      onClose,\n      overlayBackground,\n      overlayDuration,\n      overlayOpacity,\n      position,\n      width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Provider;\nProvider.propTypes = {\n  closeOnEsc: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  menuBackground: PropTypes.string,\n  menuDuration: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  overlayBackground: PropTypes.string,\n  overlayDuration: PropTypes.string,\n  overlayOpacity: PropTypes.number,\n  position: PropTypes.oneOf(['left', 'right']),\n  width: PropTypes.string\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","PropTypes","Context","Provider","children","closeOnEsc","isOpen","menuBackground","menuDuration","onClose","overlayBackground","overlayDuration","overlayOpacity","position","width","propTypes","bool","string","func","isRequired","number","oneOf"],"sources":["I:/Facu/semiario2/workspace/predictivoUI/src/components/Provider.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Context from './Context'\r\n\r\n/**\r\n * Provider component\r\n *\r\n * @param   {boolean}   closeOnEsc        if the menu should close on esc keydown\r\n * @param   {boolean}   isOpen            if the menu should be visible or not\r\n * @param   {string}    menuBackground    background color of the menu\r\n * @param   {string}    menuDuration      duration of the open/close animation for the menu\r\n * @param   {function}  onClose           callback function if menu closes\r\n * @param   {string}    overlayBackground background color of the menu\r\n * @param   {string}    overlayDuration   duration of the open/close animation for the overlay\r\n * @param   {string}    overlayOpacity    opacity of the overlay\r\n * @param   {string}    position          position of the menu (left or right)\r\n * @param   {string}    width             maximum width of the menu\r\n * @returns {component}                   React component\r\n */\r\nconst Provider = ({\r\n  children,\r\n  closeOnEsc = true,\r\n  isOpen = false,\r\n  menuBackground = '#fff',\r\n  menuDuration = '500ms',\r\n  onClose,\r\n  overlayBackground = '#000',\r\n  overlayDuration = '500ms',\r\n  overlayOpacity = 0.2,\r\n  position = 'left',\r\n  width = '300px'\r\n}) => (\r\n  <Context.Provider\r\n    value={{\r\n      closeOnEsc,\r\n      isOpen,\r\n      menuBackground,\r\n      menuDuration,\r\n      onClose,\r\n      overlayBackground,\r\n      overlayDuration,\r\n      overlayOpacity,\r\n      position,\r\n      width\r\n    }}\r\n  >\r\n    {children}\r\n  </Context.Provider>\r\n)\r\n\r\nProvider.propTypes = {\r\n  closeOnEsc: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  menuBackground: PropTypes.string,\r\n  menuDuration: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n  overlayBackground: PropTypes.string,\r\n  overlayDuration: PropTypes.string,\r\n  overlayOpacity: PropTypes.number,\r\n  position: PropTypes.oneOf(['left', 'right']),\r\n  width: PropTypes.string\r\n}\r\n\r\nexport default Provider"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAQ,GAAG;EAAA,IAAC;IAChBC,QADgB;IAEhBC,UAAU,GAAG,IAFG;IAGhBC,MAAM,GAAG,KAHO;IAIhBC,cAAc,GAAG,MAJD;IAKhBC,YAAY,GAAG,OALC;IAMhBC,OANgB;IAOhBC,iBAAiB,GAAG,MAPJ;IAQhBC,eAAe,GAAG,OARF;IAShBC,cAAc,GAAG,GATD;IAUhBC,QAAQ,GAAG,MAVK;IAWhBC,KAAK,GAAG;EAXQ,CAAD;EAAA,oBAaf,QAAC,OAAD,CAAS,QAAT;IACE,KAAK,EAAE;MACLT,UADK;MAELC,MAFK;MAGLC,cAHK;MAILC,YAJK;MAKLC,OALK;MAMLC,iBANK;MAOLC,eAPK;MAQLC,cARK;MASLC,QATK;MAULC;IAVK,CADT;IAAA,UAcGV;EAdH;IAAA;IAAA;IAAA;EAAA,QAbe;AAAA,CAAjB;;KAAMD,Q;AA+BNA,QAAQ,CAACY,SAAT,GAAqB;EACnBV,UAAU,EAAEJ,SAAS,CAACe,IADH;EAEnBV,MAAM,EAAEL,SAAS,CAACe,IAFC;EAGnBT,cAAc,EAAEN,SAAS,CAACgB,MAHP;EAInBT,YAAY,EAAEP,SAAS,CAACgB,MAJL;EAKnBR,OAAO,EAAER,SAAS,CAACiB,IAAV,CAAeC,UALL;EAMnBT,iBAAiB,EAAET,SAAS,CAACgB,MANV;EAOnBN,eAAe,EAAEV,SAAS,CAACgB,MAPR;EAQnBL,cAAc,EAAEX,SAAS,CAACmB,MARP;EASnBP,QAAQ,EAAEZ,SAAS,CAACoB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CATS;EAUnBP,KAAK,EAAEb,SAAS,CAACgB;AAVE,CAArB;AAaA,eAAed,QAAf"},"metadata":{},"sourceType":"module"}
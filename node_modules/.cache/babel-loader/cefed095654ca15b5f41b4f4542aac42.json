{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function subscribeToArray(array) {\n  return function (subscriber) {\n    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n\n    subscriber.complete();\n  };\n};","map":{"version":3,"mappings":"AAMA;OACE,IAAKA,gBAAiB,YAAjBA,gBAAiB,CAAcC,KAAd,EAAqB;SACzC,UAAWC,UAAX,EAAyB;IAC1B;MACDA,UAAW,CAAQC,IAAnB,CAAsBF,QAAtB;IACA;;;;CAJA","names":["subscribeToArray","array","subscriber","next"],"sources":["I:\\Facu\\semiario2\\workspace\\predictivoUI\\node_modules\\rxjs\\src\\internal\\util\\subscribeToArray.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n"]},"metadata":{},"sourceType":"module"}
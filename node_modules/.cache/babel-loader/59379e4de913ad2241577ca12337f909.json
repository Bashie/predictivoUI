{"ast":null,"code":"import React from'react';import Context from'./Context';/**\r\n * Provider component\r\n *\r\n * @param   {boolean}   closeOnEsc        if the menu should close on esc keydown\r\n * @param   {boolean}   isOpen            if the menu should be visible or not\r\n * @param   {string}    menuBackground    background color of the menu\r\n * @param   {string}    menuDuration      duration of the open/close animation for the menu\r\n * @param   {function}  onClose           callback function if menu closes\r\n * @param   {string}    overlayBackground background color of the menu\r\n * @param   {string}    overlayDuration   duration of the open/close animation for the overlay\r\n * @param   {string}    overlayOpacity    opacity of the overlay\r\n * @param   {string}    position          position of the menu (left or right)\r\n * @param   {string}    width             maximum width of the menu\r\n * @returns {component}                   React component\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";var Provider=function Provider(_ref){var children=_ref.children,_ref$closeOnEsc=_ref.closeOnEsc,closeOnEsc=_ref$closeOnEsc===void 0?true:_ref$closeOnEsc,_ref$isOpen=_ref.isOpen,isOpen=_ref$isOpen===void 0?false:_ref$isOpen,_ref$menuBackground=_ref.menuBackground,menuBackground=_ref$menuBackground===void 0?'#fff':_ref$menuBackground,_ref$menuDuration=_ref.menuDuration,menuDuration=_ref$menuDuration===void 0?'500ms':_ref$menuDuration,onClose=_ref.onClose,_ref$overlayBackgroun=_ref.overlayBackground,overlayBackground=_ref$overlayBackgroun===void 0?'#000':_ref$overlayBackgroun,_ref$overlayDuration=_ref.overlayDuration,overlayDuration=_ref$overlayDuration===void 0?'500ms':_ref$overlayDuration,_ref$overlayOpacity=_ref.overlayOpacity,overlayOpacity=_ref$overlayOpacity===void 0?0.2:_ref$overlayOpacity,_ref$position=_ref.position,position=_ref$position===void 0?'left':_ref$position,_ref$width=_ref.width,width=_ref$width===void 0?'300px':_ref$width;return/*#__PURE__*/_jsx(Context.Provider,{value:{closeOnEsc:closeOnEsc,isOpen:isOpen,menuBackground:menuBackground,menuDuration:menuDuration,onClose:onClose,overlayBackground:overlayBackground,overlayDuration:overlayDuration,overlayOpacity:overlayOpacity,position:position,width:width},children:children});};export default Provider;","map":{"version":3,"names":["React","Context","Provider","children","closeOnEsc","isOpen","menuBackground","menuDuration","onClose","overlayBackground","overlayDuration","overlayOpacity","position","width"],"sources":["I:/Facu/semiario2/workspace/predictivoUI/src/components/Provider.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Context from './Context'\r\n\r\n/**\r\n * Provider component\r\n *\r\n * @param   {boolean}   closeOnEsc        if the menu should close on esc keydown\r\n * @param   {boolean}   isOpen            if the menu should be visible or not\r\n * @param   {string}    menuBackground    background color of the menu\r\n * @param   {string}    menuDuration      duration of the open/close animation for the menu\r\n * @param   {function}  onClose           callback function if menu closes\r\n * @param   {string}    overlayBackground background color of the menu\r\n * @param   {string}    overlayDuration   duration of the open/close animation for the overlay\r\n * @param   {string}    overlayOpacity    opacity of the overlay\r\n * @param   {string}    position          position of the menu (left or right)\r\n * @param   {string}    width             maximum width of the menu\r\n * @returns {component}                   React component\r\n */\r\nconst Provider = ({\r\n  children,\r\n  closeOnEsc = true,\r\n  isOpen = false,\r\n  menuBackground = '#fff',\r\n  menuDuration = '500ms',\r\n  onClose,\r\n  overlayBackground = '#000',\r\n  overlayDuration = '500ms',\r\n  overlayOpacity = 0.2,\r\n  position = 'left',\r\n  width = '300px'\r\n}) => (\r\n  <Context.Provider\r\n    value={{\r\n      closeOnEsc,\r\n      isOpen,\r\n      menuBackground,\r\n      menuDuration,\r\n      onClose,\r\n      overlayBackground,\r\n      overlayDuration,\r\n      overlayOpacity,\r\n      position,\r\n      width\r\n    }}\r\n  >\r\n    {children}\r\n  </Context.Provider>\r\n)\r\n\r\nProvider.propTypes = {\r\n  closeOnEsc: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  menuBackground: PropTypes.string,\r\n  menuDuration: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n  overlayBackground: PropTypes.string,\r\n  overlayDuration: PropTypes.string,\r\n  overlayOpacity: PropTypes.number,\r\n  position: PropTypes.oneOf(['left', 'right']),\r\n  width: PropTypes.string\r\n}\r\n\r\nexport default Provider"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAGA,MAAOC,QAAP,KAAoB,WAApB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,2CACA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,UACfC,SADe,MACfA,QADe,sBAEfC,UAFe,CAEfA,UAFe,0BAEF,IAFE,kCAGfC,MAHe,CAGfA,MAHe,sBAGN,KAHM,sCAIfC,cAJe,CAIfA,cAJe,8BAIE,MAJF,4CAKfC,YALe,CAKfA,YALe,4BAKA,OALA,mBAMfC,OANe,MAMfA,OANe,4BAOfC,iBAPe,CAOfA,iBAPe,gCAOK,MAPL,iDAQfC,eARe,CAQfA,eARe,+BAQG,OARH,+CASfC,cATe,CASfA,cATe,8BASE,GATF,wCAUfC,QAVe,CAUfA,QAVe,wBAUJ,MAVI,+BAWfC,KAXe,CAWfA,KAXe,qBAWP,OAXO,+BAaf,KAAC,OAAD,CAAS,QAAT,EACE,KAAK,CAAE,CACLT,UAAU,CAAVA,UADK,CAELC,MAAM,CAANA,MAFK,CAGLC,cAAc,CAAdA,cAHK,CAILC,YAAY,CAAZA,YAJK,CAKLC,OAAO,CAAPA,OALK,CAMLC,iBAAiB,CAAjBA,iBANK,CAOLC,eAAe,CAAfA,eAPK,CAQLC,cAAc,CAAdA,cARK,CASLC,QAAQ,CAARA,QATK,CAULC,KAAK,CAALA,KAVK,CADT,UAcGV,QAdH,EAbe,EAAjB,CA4CA,cAAeD,SAAf"},"metadata":{},"sourceType":"module"}
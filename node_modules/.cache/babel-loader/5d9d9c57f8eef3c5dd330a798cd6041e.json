{"ast":null,"code":"var _jsxFileName = \"I:\\\\Facu\\\\semiario2\\\\workspace\\\\predictivoUI\\\\src\\\\components\\\\_components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../_services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const currentUser = authenticationService.currentUserValue;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }, this);\n      } // authorised so return component\n\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","authenticationService","PrivateRoute","component","Component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"sources":["I:/Facu/semiario2/workspace/predictivoUI/src/components/_components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../_services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAA,IAAC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAD;EAAA,oBACxB,QAAC,KAAD,OAAWA,IAAX;IAAiB,MAAM,EAAEC,KAAK,IAAI;MAC9B,MAAMC,WAAW,GAAGN,qBAAqB,CAACO,gBAA1C;;MACA,IAAI,CAACD,WAAL,EAAkB;QACd;QACA,oBAAO,QAAC,QAAD;UAAU,EAAE,EAAE;YAAEE,QAAQ,EAAE,QAAZ;YAAsBC,KAAK,EAAE;cAAEC,IAAI,EAAEL,KAAK,CAACM;YAAd;UAA7B;QAAd;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAL6B,CAO9B;;;MACA,oBAAO,QAAC,SAAD,OAAeN;MAAf;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EATD;IAAA;IAAA;IAAA;EAAA,QADwB;AAAA,CAArB;KAAMJ,Y"},"metadata":{},"sourceType":"module"}